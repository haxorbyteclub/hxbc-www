let zIndex = 100; // Start with an arbitrary value for z-index


window.setupDragElement = function (id) {
	var elmnt = document.getElementById(id);
	var startX = 0, startY = 0, initialX = 0, initialY = 0;
	var header = elmnt.querySelector('.title-bar');
	header.onmousedown = dragMouseDown;

	const maxX = window.innerWidth - 400; // Assuming the width of the window is 300px
	const maxY = window.innerHeight - 400; // Assuming a rough height for the window
	const randomX = Math.floor(Math.random() * Math.max(1, maxX));
	const randomY = Math.floor(Math.random() * Math.max(1, maxY));

	elmnt.style.transform = `translate(${randomX}px, ${randomY}px)`;

	header.addEventListener('touchstart', dragMouseDown);
	header.addEventListener('touchmove', elementDrag);
	header.addEventListener('touchend', closeDragElement);

	function dragMouseDown(e) {
		e.preventDefault();
		// Bring the current window to the front
		elmnt.style.zIndex = zIndex++;

		if (e.type === 'touchstart') {
			startX = e.touches[0].clientX;
			startY = e.touches[0].clientY;
		} else {
			startX = e.clientX;
			startY = e.clientY;
		}

		let transform = getComputedStyle(elmnt).transform;
		if (transform !== 'none') {
			let matrix = new DOMMatrixReadOnly(transform);
			initialX = matrix.m41;
			initialY = matrix.m42;
		}

		document.onmouseup = closeDragElement;
		document.onmousemove = elementDrag;
	}

	function elementDrag(e) {
		e.preventDefault();
		let clientX, clientY;
		if (e.type === 'touchmove') {
			clientX = e.touches[0].clientX;
			clientY = e.touches[0].clientY;
		} else {
			clientX = e.clientX;
			clientY = e.clientY;
		}

		let deltaX = clientX - startX;
		let deltaY = clientY - startY;

		let newX = initialX + deltaX;
		let newY = initialY + deltaY;

		newX = Math.max(0, Math.min(newX, window.innerWidth - elmnt.offsetWidth));
		newY = Math.max(0, Math.min(newY, window.innerHeight - elmnt.offsetHeight));

		elmnt.style.transform = `translate(${newX}px, ${newY}px)`;
	}

	function closeDragElement() {
		document.onmouseup = null;
		document.onmousemove = null;
		document.ontouchend = null;
		document.ontouchmove = null;
	}
}

window.bringToFront = function (id) {
	const elmnt = document.getElementById(id);
	elmnt.style.zIndex = zIndex++;
}

// Additionally, to bring a window to front when clicked, not just when dragged
document.addEventListener('click', function (e) {
	if (e.target.classList.contains('draggable') || e.target.closest('.draggable')) {
		let targetEl = e.target.closest('.draggable');
		targetEl.style.zIndex = zIndex++;
	}
}, true);


function updateTimeAndDate() {
	const dateElement = document.getElementById('currentDate');
	const timeElement = document.getElementById('currentTime');
	const now = new Date();
	dateElement.textContent = now.toLocaleDateString();
	timeElement.textContent = now.toLocaleTimeString();
}

window.setupClock = function () {

	setInterval(updateTimeAndDate, 1000); // Update the date and time every second
	updateTimeAndDate(); // Initial call to display the date and time
}

window.playAudio = function (url) {
	stopEqualizer();
	if (document.querySelector('audio')) {
		document.querySelector('audio').remove();
	}
	var audio = document.createElement('audio');
	audio.src = url;
	audio.autoplay = true;
	audio.loop = true;
	audio.style.display = 'none';
	document.body.appendChild(audio);

	audio.addEventListener('timeupdate', function () {
		//update .progress width
		var progress = document.querySelector('.progress');
		var value = 0;
		if (audio.currentTime > 0) {
			value = Math.floor((100 / audio.duration) * audio.currentTime);
		}
		var currentTimeSpan = document.querySelector('.audio-current-time');
		if (currentTimeSpan) {
			currentTimeSpan.textContent = ('0' + Math.floor(audio.currentTime / 60)).slice(-2) + ':' + ('0' + Math.floor(audio.currentTime % 60)).slice(-2);
		}
		if (progress) {
			progress.style.width = value + '%';
		}
	});
	//start with delay
	setTimeout(function () {
		animateEqualizer();
	}, 500);

}

window.stopAudio = function () {
	stopEqualizer();
	if (document.querySelector('audio')) {
		document.querySelector('audio').remove();
	}
}

window.playPauseAudio = function () {
	var audio = document.querySelector('audio');
	if (audio.paused) {
		audio.play();
		animateEqualizer();

	} else {
		audio.pause();
		stopEqualizer();
	}
}

var intervalIds = [];

function animateEqualizer() {
	// Clear existing intervals
	intervalIds.forEach(clearInterval);
	intervalIds = [];

	var bars = document.querySelectorAll('.bar');
	bars.forEach(function (bar) {
		var intervalId = setInterval(function () {
			bar.style.height = Math.floor(Math.random() * 100) + '%';
		}, Math.floor(Math.random() * 800));
		intervalIds.push(intervalId);
	});
}

function stopEqualizer() {
	console.log('Stopping equalizer');
	intervalIds.forEach(clearInterval);
	intervalIds = [];
	var bars = document.querySelectorAll('.bar');
	bars.forEach(function (bar) {
		bar.style.height = '0%';
	});
}


// Handle window resize
window.addEventListener('resize', function () {
	const draggableElements = document.querySelectorAll('.draggable');
	draggableElements.forEach(elmnt => {
		let transform = getComputedStyle(elmnt).transform;
		if (transform !== 'none') {
			let matrix = new DOMMatrixReadOnly(transform);
			let currentX = matrix.m41;
			let currentY = matrix.m42;

			let newX = Math.min(currentX, window.innerWidth - elmnt.offsetWidth);
			let newY = Math.min(currentY, window.innerHeight - elmnt.offsetHeight);

			elmnt.style.transform = `translate(${newX}px, ${newY}px)`;
		}
	});
});


window.changeBackground = function (cssClass) {
	var wallpaper = document.getElementById('wallpaper');
	wallpaper.classList = '';
	wallpaper.classList.add(cssClass);
}

window.triggerDownload = function (url) {
	const link = document.createElement('a');
	link.href = url;
	link.download = url.substring(url.lastIndexOf('/') + 1);
	document.body.appendChild(link);
	link.click();
	document.body.removeChild(link);
}



window.setupIconDrag = function () {
	const icons = document.querySelectorAll(".desktop-icon");
	const occupiedPositions = []; // Array to store occupied positions

	icons.forEach(icon => {
		let isDragging = false; // Flag to track dragging

		// Function to check if a position overlaps with existing icons
		const isOverlapping = (x, y, width, height) => {
			return occupiedPositions.some(pos => {
				return (
					x < pos.x + pos.width &&
					x + width > pos.x &&
					y < pos.y + pos.height &&
					y + height > pos.y
				);
			});
		};

		// Set random initial positions for the icons
		const maxX = window.innerWidth - icon.offsetWidth; // Ensure the icon stays within the screen width
		const maxY = window.innerHeight - icon.offsetHeight - 50; // Subtract 50px for the top bar height
		let randomX, randomY;

		// Keep generating random positions until no overlap is found
		do {
			randomX = Math.floor(Math.random() * Math.max(1, maxX));
			randomY = Math.floor(Math.random() * Math.max(1, maxY)) + 50; // Ensure it starts below the top bar
		} while (isOverlapping(randomX, randomY, icon.offsetWidth, icon.offsetHeight));

		// Store the position as occupied
		occupiedPositions.push({
			x: randomX,
			y: randomY,
			width: icon.offsetWidth,
			height: icon.offsetHeight
		});

		icon.style.position = "absolute";
		icon.style.left = `${randomX}px`;
		icon.style.top = `${randomY}px`;
		icon.style.cursor = "grab";

		// Add drag-and-drop functionality
		icon.addEventListener("mousedown", (e) => {
			isDragging = false; // Reset dragging flag
			icon.style.cursor = "grabbing";
			let shiftX = e.clientX - icon.getBoundingClientRect().left;
			let shiftY = e.clientY - icon.getBoundingClientRect().top;

			const moveAt = (pageX, pageY) => {
				isDragging = true; // Set dragging flag
				let newX = Math.max(0, Math.min(pageX - shiftX, window.innerWidth - icon.offsetWidth));
				let newY = Math.max(50, Math.min(pageY - shiftY, window.innerHeight - icon.offsetHeight)); // Prevent moving into the top bar
				icon.style.left = `${newX}px`;
				icon.style.top = `${newY}px`;
			};

			const onMouseMove = (e) => {
				moveAt(e.pageX, e.pageY);
			};

			document.addEventListener("mousemove", onMouseMove);

			icon.addEventListener("mouseup", () => {
				document.removeEventListener("mousemove", onMouseMove);
				icon.style.cursor = "grab";
			}, { once: true });
		});

		// Prevent @onclick from firing if the icon was dragged
		icon.addEventListener("click", (e) => {
			if (isDragging) {
				e.stopImmediatePropagation(); // Prevent the click event from propagating
			}
		});

		icon.ondragstart = () => false; // Disable default drag behavior
	});
};o_12;cursor:pointer}.btn:active{background:var(--secondary);border-radius:6px;color:var(--primary);font-family:Chicago_12}.btn:disabled{min-height:20px;min-width:59px;text-align:center;background:var(--primary);border-style:solid;border-width:5.5px;border-image:url(icons/button.svg) 30 stretch;color:var(--disabled);text-align:center;text-decoration:none;font-size:18px;font-family:Chicago_12}.btn-default{border-image:url(icons/button-default.svg) 60 stretch;border-width:.5em}.btn-default:active{border-radius:12px}input{border:1.5px solid var(--secondary);font-family:Chicago_12;font-size:18px;padding-left:5px}input:focus{outline:0}input[type=color]:focus-visible,input[type=date]:focus-visible,input[type=datetime-local]:focus-visible,input[type=datetime]:focus-visible,input[type=email]:focus-visible,input[type=month]:focus-visible,input[type=number]:focus-visible,input[type=password]:focus-visible,input[type=search]:focus-visible,input[type=tel]:focus-visible,input[type=text]:focus-visible,input[type=time]:focus-visible,input[type=week]:focus-visible,textarea:focus{background:var(--secondary);color:var(--primary)}input[type=radio]+label::before{border-image:svg-load("./icons/radio-border.svg");width:20px;height:20px}input[type=checkbox]+label::before{border:1.5px solid var(--secondary);width:20px;height:20px}input[type=checkbox],input[type=radio]{appearance:none;-webkit-appearance:none;-moz-appearance:none;margin:0;background:0;position:fixed;opacity:0;border:none}input[type=checkbox]+label,input[type=radio]+label{line-height:13px;padding-left:5px}input[type=radio]+label{position:relative;margin-left:var(--radio-total-width)}input[type=radio]+label::before{content:"";position:absolute;top:0;left:calc(-1 * (var(--radio-total-width-precalc)));display:inline-block;width:var(--radio-width);height:var(--radio-width);margin-right:var(--radio-label-spacing);background:svg-load("./icons/radio-border.svg")}input[type=radio]:focus-visible+label::before,input[type=radio]:hover+label::before{background-image:svg-load("./icons/radio-border-focused.svg")}input[type=radio]:checked+label::after{content:"";display:block;width:var(--radio-dot-width);height:var(--radio-dot-width);top:var(--radio-dot-top);left:var(--radio-dot-left);position:absolute;background:svg-load("./icons/radio-dot.svg")}input[type=checkbox]+label{position:relative;margin-left:var(--checkbox-total-width)}input[type=checkbox]+label::before{content:"";position:absolute;left:calc(-1 * (var(--checkbox-total-width-precalc)));display:inline-block;width:var(--checkbox-width);height:var(--checkbox-width);background:var(--button-highlight);box-shadow:var(--border-field);margin-right:var(--radio-label-spacing)}input[type=checkbox]:focus-visible+label::before,input[type=checkbox]:hover+label::before{outline:1px solid var(--secondary)}input[type=checkbox]:checked+label::after{content:"";display:block;width:var(--checkmark-width);height:var(--checkmark-width);position:absolute;top:var(--checkmark-top);left:calc(-1 * (var(--checkbox-total-width-precalc)) + var(--checkmark-left));background:svg-load("./icons/checkmark.svg");background-repeat:no-repeat}input[type=checkbox][disabled]+label::before{background:var(--surface)}input[type=checkbox][disabled]:checked+label::after{background:svg-load("./icons/checkmark-disabled.svg")}.field-row{display:flex;align-items:center;font-family:Chicago_12;font-size:1em}[class^=field-row]+[class^=field-row]{margin-top:var(--grouped-element-spacing)}.field-row>*+*{margin-left:var(--grouped-element-spacing)}.apple{background:svg-load("./icons/apple.svg");height:22px;width:18px;background-repeat:no-repeat;border:none;display:inline-block;margin-right:2px}form{font-family:Inconsolata,Menlo,Chicago,Geneva;font-size:14px}select{border:1.5px solid;height:auto;width:10rem;font-family:Chicago_12;font-size:18px;background-image:svg-load("./icons/select-button.svg");background-position:top 2px right 2px;background-repeat:no-repeat;appearance:none;-webkit-appearance:none;-moz-appearance:none;position:relative;padding-left:20px;-webkit-box-shadow:2px 8px 0 0 var(--secondary);-moz-box-shadow:2px 8px 0 0 var(--secondary);box-shadow:2px 2px 0 -1px var(--secondary)}ul[role]{margin:0;padding:0;list-style:none;cursor:pointer;font-family:Chicago_12;font-size:1em}ul[role=menu-bar]{display:flex;background:var(--primary)}ul[role=menu-bar]>[role=menu-item]{position:relative;padding:6px 10px}ul[role=menu-bar]>[role=menu-item]:focus,ul[role=menu-bar]>[role=menu-item]:focus-within,ul[role=menu-bar]>[role=menu-item]:hover{background:var(--secondary);color:var(--primary);outline:0}ul[role=menu-bar]>[role=menu-item][aria-haspopup=false] *{color:inherit;background:inherit;text-decoration:none}ul[role=menu]{position:relative;min-width:200px;background:var(--primary);color:initial;border:1px solid;box-shadow:var(--box-shadow)}ul[role=menu]::before{content:"";pointer-events:none;position:absolute;left:28px;width:2px;box-shadow:inset 1px 0 rgba(0,0,0,.15),inset -1px 0 var(--primary)}[role=menu-item] ul[role=menu]{display:none;position:absolute;left:0;top:100%;z-index:99}ul[role=menu]>[role=menu-item]>a,ul[role=menu]>[role=menu-item]>button,ul[role=menu]>[role=menu-item][aria-haspopup=true]{all:unset;position:relative;padding:5px 20px;display:block;width:100%;box-sizing:border-box}ul[role=menu]>[role=menu-item]>a:focus,ul[role=menu]>[role=menu-item]>a:hover,ul[role=menu]>[role=menu-item]>button:focus,ul[role=menu]>[role=menu-item]>button:hover,ul[role=menu]>[role=menu-item][aria-haspopup=true]:focus,ul[role=menu]>[role=menu-item][aria-haspopup=true]:hover{background:var(--secondary);color:var(--primary)}ul [role=menu-item]{position:relative}ul [role=menu-item]:focus-within>[role=menu],ul [role=menu-item]:focus>[role=menu]{display:block}ul [role=menu-item].divider::after{content:"";pointer-events:none;display:block;padding:0;border-top:1.5px dotted var(--secondary)}.menu-items>li{margin-bottom:1rem}+ * {
  margin-left: var(--grouped-element-spacing);
}

.apple {
  background: svg-load("./icons/apple.svg");
  height: 22px;
  width: 18px;
  background-repeat: no-repeat;
  border: none;
  display: inline-block;
  margin-right: 2px;
}

/* Form */
form {
  font-family: "Inconsolata", Menlo, Chicago, Geneva;
  font-size:14px;
}

/* select menu */
select {
  border: 1.5px solid;
  height: auto;
  width: 10rem;
  font-family: Chicago_12;
  font-size: 18px;
  background-image: svg-load("./icons/select-button.svg");
  background-position: top 2px right 2px;
  background-repeat: no-repeat;
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  position: relative;
  padding-left: 20px;
  -webkit-box-shadow: 2px 8px 0 0px var(--secondary);
	   -moz-box-shadow: 2px 8px 0 0px var(--secondary);
	        box-shadow: 2px 2px 0 -1px var(--secondary);
}

/* menu-bar */
ul[role] {
  margin: 0;
  padding: 0;
  list-style: none;
  cursor: pointer;
  font-family: Chicago_12;
  font-size: 1em;
}
ul[role="menu-bar"] {
  display: flex;
  background: var(--primary);
}
ul[role="menu-bar"] > [role="menu-item"] {
  position: relative;
  padding: 6px 10px;
}
ul[role="menu-bar"] > [role="menu-item"]:focus, ul[role="menu-bar"] > [role="menu-item"]:focus-within, ul[role="menu-bar"] > [role="menu-item"]:hover {
  background: var(--secondary);
  color: var(--primary);
  outline: none;
}
ul[role="menu-bar"] > [role="menu-item"][aria-haspopup="false"] * {
  color: inherit;
  background: inherit;
  text-decoration: none;
}
ul[role="menu"] {
  position: relative;
  min-width: 200px;
  background: var(--primary);
  color: initial;
  border: 1px solid;
  box-shadow: var(--box-shadow);
}
ul[role="menu"]::before {
  content: "";
  pointer-events: none;
  position: absolute;
  left: 28px;
  width: 2px;
  box-shadow: inset 1px 0 rgba(0, 0, 0, 0.15), inset -1px 0 var(--primary);
}
[role="menu-item"] ul[role="menu"] {
  display: none;
  position: absolute;
  left: 0;
  top: 100%;
  z-index: 99;
}
ul[role="menu"] > [role="menu-item"] > a, ul[role="menu"] > [role="menu-item"] > button, ul[role="menu"] > [role="menu-item"][aria-haspopup="true"] {
  all: unset;
  position: relative;
  padding: 5px 20px;
  display: block;
  width: 100%;
  box-sizing: border-box;

}
ul[role="menu"] > [role="menu-item"] > a:hover, ul[role="menu"] > [role="menu-item"] > button:hover, ul[role="menu"] > [role="menu-item"][aria-haspopup="true"]:hover, ul[role="menu"] > [role="menu-item"] > a:focus, ul[role="menu"] > [role="menu-item"] > button:focus, ul[role="menu"] > [role="menu-item"][aria-haspopup="true"]:focus {
  background: var(--secondary);
  color: var(--primary);
}
ul [role="menu-item"] {
  position: relative;
}
ul [role="menu-item"]:focus > [role="menu"], ul [role="menu-item"]:focus-within > [role="menu"] {
  display: block;
}
ul [role="menu-item"].divider::after {
  content: "";
  pointer-events: none;
  display: block;
  padding: 0;
  border-top: 1.5px dotted var(--secondary);
}

/* styles specific to demo page */
.menu-items > li {
  margin-bottom: 1rem;
}
00%;
    tab-size: 4;
    font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    font-feature-settings: initial;
    font-variation-settings: initial;
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    font-feature-settings: initial;
    font-variation-settings: initial;
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: color-mix(in oklab, currentColor 50%, transparent);
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .static {
    position: static;
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-3 {
    margin-bottom: calc(var(--spacing) * 3);
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .h-\[22px\] {
    height: 22px;
  }
  .h-\[32px\] {
    height: 32px;
  }
  .h-full {
    height: 100%;
  }
  .max-h-\[400px\] {
    max-height: 400px;
  }
  .w-0 {
    width: calc(var(--spacing) * 0);
  }
  .w-9\/12 {
    width: calc(9/12 * 100%);
  }
  .w-11\/12 {
    width: calc(11/12 * 100%);
  }
  .w-\[95px\] {
    width: 95px;
  }
  .w-\[110px\] {
    width: 110px;
  }
  .w-\[250px\] {
    width: 250px;
  }
  .w-\[420px\] {
    width: 420px;
  }
  .w-full {
    width: 100%;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .text-center {
    text-align: center;
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .leading-\[1\.2\] {
    --tw-leading: 1.2;
    line-height: 1.2;
  }
  .font-\[600\] {
    --tw-font-weight: 600;
    font-weight: 600;
  }
  .font-black {
    --tw-font-weight: var(--font-weight-black);
    font-weight: var(--font-weight-black);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .underline {
    text-decoration-line: underline;
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-\[150ms\] {
    --tw-duration: 150ms;
    transition-duration: 150ms;
  }
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: none;
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
