let audioPlayerRef,zIndex=100;function updateTimeAndDate(){const e=document.getElementById("currentDate"),t=document.getElementById("currentTime"),n=new Date;e.textContent=n.toLocaleDateString(),t.textContent=n.toLocaleTimeString()}window.setupDragElement=function(e){var t=document.getElementById(e),n=0,o=0,a=0,i=0,r=t.querySelector(".title-bar");r.onmousedown=s;const d=window.innerWidth-400,l=window.innerHeight-400,u=Math.floor(Math.random()*Math.max(1,d)),c=Math.floor(Math.random()*Math.max(1,l));function s(e){if(e.target.closest('button, a, input, textarea, select, [tabindex]:not([tabindex="-1"])'))return;e.preventDefault(),t.style.zIndex=zIndex++,"touchstart"===e.type?(n=e.touches[0].clientX,o=e.touches[0].clientY):(n=e.clientX,o=e.clientY);let r=getComputedStyle(t).transform;if("none"!==r){let e=new DOMMatrixReadOnly(r);a=e.m41,i=e.m42}document.onmouseup=h,document.onmousemove=m}function m(e){let r,d;e.preventDefault(),"touchmove"===e.type?(r=e.touches[0].clientX,d=e.touches[0].clientY):(r=e.clientX,d=e.clientY);let l=a+(r-n),u=i+(d-o);l=Math.max(0,Math.min(l,window.innerWidth-t.offsetWidth)),u=Math.max(0,Math.min(u,window.innerHeight-t.offsetHeight)),t.style.transform=`translate(${l}px, ${u}px)`}function h(){document.onmouseup=null,document.onmousemove=null,document.ontouchend=null,document.ontouchmove=null}t.style.transform=`translate(${u}px, ${c}px)`,r.addEventListener("touchstart",s),r.addEventListener("touchmove",m),r.addEventListener("touchend",h)},window.bringToFront=function(e){document.getElementById(e).style.zIndex=zIndex++},document.addEventListener("click",function(e){if(e.target.classList.contains("draggable")||e.target.closest(".draggable")){e.target.closest(".draggable").style.zIndex=zIndex++}},!0),window.setupClock=function(){setInterval(updateTimeAndDate,1e3),updateTimeAndDate()},window.initializeAudioPlayer=function(e){audioPlayerRef=e},window.playAudio=function(e){stopEqualizer(),document.querySelector("audio")&&document.querySelector("audio").remove();var t=document.createElement("audio");t.src=e,t.autoplay=!0,t.loop=!1,t.style.display="none",document.body.appendChild(t),t.addEventListener("timeupdate",function(){var e=document.querySelector(".progress"),n=0;t.currentTime>0&&(n=Math.floor(100/t.duration*t.currentTime));var o=document.querySelector(".audio-current-time");o&&(o.textContent=("0"+Math.floor(t.currentTime/60)).slice(-2)+":"+("0"+Math.floor(t.currentTime%60)).slice(-2)),e&&(e.style.width=n+"%")}),t.addEventListener("ended",function(){audioPlayerRef&&audioPlayerRef.invokeMethodAsync("PlayNext")}),setTimeout(function(){animateEqualizer()},500)},window.stopAudio=function(){stopEqualizer(),document.querySelector("audio")&&document.querySelector("audio").remove()},window.playPauseAudio=function(){var e=document.querySelector("audio");e.paused?(e.play(),animateEqualizer()):(e.pause(),stopEqualizer())};var intervalIds=[];function animateEqualizer(){intervalIds.forEach(clearInterval),intervalIds=[],document.querySelectorAll(".bar").forEach(function(e){var t=setInterval(function(){e.style.height=Math.floor(100*Math.random())+"%"},Math.floor(800*Math.random()));intervalIds.push(t)})}function stopEqualizer(){intervalIds.forEach(clearInterval),intervalIds=[],document.querySelectorAll(".bar").forEach(function(e){e.style.height="0%"})}window.addEventListener("resize",function(){document.querySelectorAll(".draggable").forEach(e=>{let t=getComputedStyle(e).transform;if("none"!==t){let n=new DOMMatrixReadOnly(t),o=n.m41,a=n.m42,i=Math.min(o,window.innerWidth-e.offsetWidth),r=Math.min(a,window.innerHeight-e.offsetHeight);e.style.transform=`translate(${i}px, ${r}px)`}})}),window.changeBackground=function(e){var t=document.getElementById("wallpaper");t.classList="",t.classList.add(e)},window.triggerDownload=function(e){const t=document.createElement("a");t.href=e,t.download=e.substring(e.lastIndexOf("/")+1),document.body.appendChild(t),t.click(),document.body.removeChild(t)},window.setupIconDrag=function(){const e=document.querySelectorAll(".desktop-icon"),t=[];e.forEach(e=>{let n=!1;const o=(e,n,o,a)=>t.some(t=>e<t.x+t.width&&e+o>t.x&&n<t.y+t.height&&n+a>t.y),a=window.innerWidth-e.offsetWidth,i=window.innerHeight-e.offsetHeight-50;let r,d;do{r=Math.floor(Math.random()*Math.max(1,a)),d=Math.floor(Math.random()*Math.max(1,i))+50}while(o(r,d,e.offsetWidth,e.offsetHeight));t.push({x:r,y:d,width:e.offsetWidth,height:e.offsetHeight}),e.style.position="absolute",e.style.left=`${r}px`,e.style.top=`${d}px`,e.style.cursor="grab",e.addEventListener("mousedown",t=>{n=!1,e.style.cursor="grabbing";let o=t.clientX-e.getBoundingClientRect().left,a=t.clientY-e.getBoundingClientRect().top;const i=t=>{((t,i)=>{n=!0;let r=Math.max(0,Math.min(t-o,window.innerWidth-e.offsetWidth)),d=Math.max(50,Math.min(i-a,window.innerHeight-e.offsetHeight));e.style.left=`${r}px`,e.style.top=`${d}px`})(t.pageX,t.pageY)};document.addEventListener("mousemove",i),e.addEventListener("mouseup",()=>{document.removeEventListener("mousemove",i),e.style.cursor="grab"},{once:!0})}),e.addEventListener("click",e=>{n&&e.stopImmediatePropagation()}),e.ondragstart=()=>!1})};() {
	intervalIds.forEach(clearInterval);
	intervalIds = [];
	var bars = document.querySelectorAll('.bar');
	bars.forEach(function (bar) {
		bar.style.height = '0%';
	});
}


// Handle window resize
window.addEventListener('resize', function () {
	const draggableElements = document.querySelectorAll('.draggable');
	draggableElements.forEach(elmnt => {
		let transform = getComputedStyle(elmnt).transform;
		if (transform !== 'none') {
			let matrix = new DOMMatrixReadOnly(transform);
			let currentX = matrix.m41;
			let currentY = matrix.m42;

			let newX = Math.min(currentX, window.innerWidth - elmnt.offsetWidth);
			let newY = Math.min(currentY, window.innerHeight - elmnt.offsetHeight);

			elmnt.style.transform = `translate(${newX}px, ${newY}px)`;
		}
	});
});


window.changeBackground = function (cssClass) {
	var wallpaper = document.getElementById('wallpaper');
	wallpaper.classList = '';
	wallpaper.classList.add(cssClass);
}

window.triggerDownload = function (url) {
	const link = document.createElement('a');
	link.href = url;
	link.download = url.substring(url.lastIndexOf('/') + 1);
	document.body.appendChild(link);
	link.click();
	document.body.removeChild(link);
}



window.setupIconDrag = function () {
	const icons = document.querySelectorAll(".desktop-icon");
	const occupiedPositions = []; // Array to store occupied positions

	icons.forEach(icon => {
		let isDragging = false; // Flag to track dragging

		// Function to check if a position overlaps with existing icons
		const isOverlapping = (x, y, width, height) => {
			return occupiedPositions.some(pos => {
				return (
					x < pos.x + pos.width &&
					x + width > pos.x &&
					y < pos.y + pos.height &&
					y + height > pos.y
				);
			});
		};

		// Set random initial positions for the icons
		const maxX = window.innerWidth - icon.offsetWidth; // Ensure the icon stays within the screen width
		const maxY = window.innerHeight - icon.offsetHeight - 50; // Subtract 50px for the top bar height
		let randomX, randomY;

		// Keep generating random positions until no overlap is found
		do {
			randomX = Math.floor(Math.random() * Math.max(1, maxX));
			randomY = Math.floor(Math.random() * Math.max(1, maxY)) + 50; // Ensure it starts below the top bar
		} while (isOverlapping(randomX, randomY, icon.offsetWidth, icon.offsetHeight));

		// Store the position as occupied
		occupiedPositions.push({
			x: randomX,
			y: randomY,
			width: icon.offsetWidth,
			height: icon.offsetHeight
		});

		icon.style.position = "absolute";
		icon.style.left = `${randomX}px`;
		icon.style.top = `${randomY}px`;
		icon.style.cursor = "grab";

		// Add drag-and-drop functionality
		icon.addEventListener("mousedown", (e) => {
			isDragging = false; // Reset dragging flag
			icon.style.cursor = "grabbing";
			let shiftX = e.clientX - icon.getBoundingClientRect().left;
			let shiftY = e.clientY - icon.getBoundingClientRect().top;

			const moveAt = (pageX, pageY) => {
				isDragging = true; // Set dragging flag
				let newX = Math.max(0, Math.min(pageX - shiftX, window.innerWidth - icon.offsetWidth));
				let newY = Math.max(50, Math.min(pageY - shiftY, window.innerHeight - icon.offsetHeight)); // Prevent moving into the top bar
				icon.style.left = `${newX}px`;
				icon.style.top = `${newY}px`;
			};

			const onMouseMove = (e) => {
				moveAt(e.pageX, e.pageY);
			};

			document.addEventListener("mousemove", onMouseMove);

			icon.addEventListener("mouseup", () => {
				document.removeEventListener("mousemove", onMouseMove);
				icon.style.cursor = "grab";
			}, { once: true });
		});

		// Prevent @onclick from firing if the icon was dragged
		icon.addEventListener("click", (e) => {
			if (isDragging) {
				e.stopImmediatePropagation(); // Prevent the click event from propagating
			}
		});

		icon.ondragstart = () => false; // Disable default drag behavior
	});
};00: oklch(71.8% 0.202 349.761);
    --color-pink-500: oklch(65.6% 0.241 354.308);
    --color-pink-600: oklch(59.2% 0.249 0.584);
    --color-pink-700: oklch(52.5% 0.223 3.958);
    --color-pink-800: oklch(45.9% 0.187 3.815);
    --color-pink-900: oklch(40.8% 0.153 2.432);
    --color-pink-950: oklch(28.4% 0.109 3.907);
    --color-rose-50: oklch(96.9% 0.015 12.422);
    --color-rose-100: oklch(94.1% 0.03 12.58);
    --color-rose-200: oklch(89.2% 0.058 10.001);
    --color-rose-300: oklch(81% 0.117 11.638);
    --color-rose-400: oklch(71.2% 0.194 13.428);
    --color-rose-500: oklch(64.5% 0.246 16.439);
    --color-rose-600: oklch(58.6% 0.253 17.585);
    --color-rose-700: oklch(51.4% 0.222 16.935);
    --color-rose-800: oklch(45.5% 0.188 13.697);
    --color-rose-900: oklch(41% 0.159 10.272);
    --color-rose-950: oklch(27.1% 0.105 12.094);
    --color-slate-50: oklch(98.4% 0.003 247.858);
    --color-slate-100: oklch(96.8% 0.007 247.896);
    --color-slate-200: oklch(92.9% 0.013 255.508);
    --color-slate-300: oklch(86.9% 0.022 252.894);
    --color-slate-400: oklch(70.4% 0.04 256.788);
    --color-slate-500: oklch(55.4% 0.046 257.417);
    --color-slate-600: oklch(44.6% 0.043 257.281);
    --color-slate-700: oklch(37.2% 0.044 257.287);
    --color-slate-800: oklch(27.9% 0.041 260.031);
    --color-slate-900: oklch(20.8% 0.042 265.755);
    --color-slate-950: oklch(12.9% 0.042 264.695);
    --color-gray-50: oklch(98.5% 0.002 247.839);
    --color-gray-100: oklch(96.7% 0.003 264.542);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-400: oklch(70.7% 0.022 261.325);
    --color-gray-500: oklch(55.1% 0.027 264.364);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-700: oklch(37.3% 0.034 259.733);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-gray-950: oklch(13% 0.028 261.692);
    --color-zinc-50: oklch(98.5% 0 0);
    --color-zinc-100: oklch(96.7% 0.001 286.375);
    --color-zinc-200: oklch(92% 0.004 286.32);
    --color-zinc-300: oklch(87.1% 0.006 286.286);
    --color-zinc-400: oklch(70.5% 0.015 286.067);
    --color-zinc-500: oklch(55.2% 0.016 285.938);
    --color-zinc-600: oklch(44.2% 0.017 285.786);
    --color-zinc-700: oklch(37% 0.013 285.805);
    --color-zinc-800: oklch(27.4% 0.006 286.033);
    --color-zinc-900: oklch(21% 0.006 285.885);
    --color-zinc-950: oklch(14.1% 0.005 285.823);
    --color-neutral-50: oklch(98.5% 0 0);
    --color-neutral-100: oklch(97% 0 0);
    --color-neutral-200: oklch(92.2% 0 0);
    --color-neutral-300: oklch(87% 0 0);
    --color-neutral-400: oklch(70.8% 0 0);
    --color-neutral-500: oklch(55.6% 0 0);
    --color-neutral-600: oklch(43.9% 0 0);
    --color-neutral-700: oklch(37.1% 0 0);
    --color-neutral-800: oklch(26.9% 0 0);
    --color-neutral-900: oklch(20.5% 0 0);
    --color-neutral-950: oklch(14.5% 0 0);
    --color-stone-50: oklch(98.5% 0.001 106.423);
    --color-stone-100: oklch(97% 0.001 106.424);
    --color-stone-200: oklch(92.3% 0.003 48.717);
    --color-stone-300: oklch(86.9% 0.005 56.366);
    --color-stone-400: oklch(70.9% 0.01 56.259);
    --color-stone-500: oklch(55.3% 0.013 58.071);
    --color-stone-600: oklch(44.4% 0.011 73.639);
    --color-stone-700: oklch(37.4% 0.01 67.558);
    --color-stone-800: oklch(26.8% 0.007 34.298);
    --color-stone-900: oklch(21.6% 0.006 56.043);
    --color-stone-950: oklch(14.7% 0.004 49.25);
    --color-black: #000;
    --color-white: #fff;
    --spacing: 0.25rem;
    --breakpoint-sm: 40rem;
    --breakpoint-md: 48rem;
    --breakpoint-lg: 64rem;
    --breakpoint-xl: 80rem;
    --breakpoint-2xl: 96rem;
    --container-3xs: 16rem;
    --container-2xs: 18rem;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --container-6xl: 72rem;
    --container-7xl: 80rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --text-8xl: 6rem;
    --text-8xl--line-height: 1;
    --text-9xl: 8rem;
    --text-9xl--line-height: 1;
    --font-weight-thin: 100;
    --font-weight-extralight: 200;
    --font-weight-light: 300;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;
    --font-weight-black: 900;
    --tracking-tighter: -0.05em;
    --tracking-tight: -0.025em;
    --tracking-normal: 0em;
    --tracking-wide: 0.025em;
    --tracking-wider: 0.05em;
    --tracking-widest: 0.1em;
    --leading-tight: 1.25;
    --leading-snug: 1.375;
    --leading-normal: 1.5;
    --leading-relaxed: 1.625;
    --leading-loose: 2;
    --radius-xs: 0.125rem;
    --radius-sm: 0.25rem;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --radius-4xl: 2rem;
    --shadow-2xs: 0 1px rgb(0 0 0 / 0.05);
    --shadow-xs: 0 1px 2px 0 rgb(0 0 0 / 0.05);
    --shadow-sm: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px -1px rgb(0 0 0 / 0.1);
    --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
    --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
    --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
    --shadow-2xl: 0 25px 50px -12px rgb(0 0 0 / 0.25);
    --inset-shadow-2xs: inset 0 1px rgb(0 0 0 / 0.05);
    --inset-shadow-xs: inset 0 1px 1px rgb(0 0 0 / 0.05);
    --inset-shadow-sm: inset 0 2px 4px rgb(0 0 0 / 0.05);
    --drop-shadow-xs: 0 1px 1px rgb(0 0 0 / 0.05);
    --drop-shadow-sm: 0 1px 2px rgb(0 0 0 / 0.15);
    --drop-shadow-md: 0 3px 3px rgb(0 0 0 / 0.12);
    --drop-shadow-lg: 0 4px 4px rgb(0 0 0 / 0.15);
    --drop-shadow-xl: 0 9px 7px rgb(0 0 0 / 0.1);
    --drop-shadow-2xl: 0 25px 25px rgb(0 0 0 / 0.15);
    --text-shadow-2xs: 0px 1px 0px rgb(0 0 0 / 0.15);
    --text-shadow-xs: 0px 1px 1px rgb(0 0 0 / 0.2);
    --text-shadow-sm: 0px 1px 0px rgb(0 0 0 / 0.075), 0px 1px 1px rgb(0 0 0 / 0.075),
      0px 2px 2px rgb(0 0 0 / 0.075);
    --text-shadow-md: 0px 1px 1px rgb(0 0 0 / 0.1), 0px 1px 2px rgb(0 0 0 / 0.1),
      0px 2px 4px rgb(0 0 0 / 0.1);
    --text-shadow-lg: 0px 1px 2px rgb(0 0 0 / 0.1), 0px 3px 2px rgb(0 0 0 / 0.1),
      0px 4px 8px rgb(0 0 0 / 0.1);
    --ease-in: cubic-bezier(0.4, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-ping: ping 1s cubic-bezier(0, 0, 0.2, 1) infinite;
    --animate-pulse: pulse 2s cubic-bezier(0.4, 0, 0.6, 1) infinite;
    --animate-bounce: bounce 1s infinite;
    --blur-xs: 4px;
    --blur-sm: 8px;
    --blur-md: 12px;
    --blur-lg: 16px;
    --blur-xl: 24px;
    --blur-2xl: 40px;
    --blur-3xl: 64px;
    --perspective-dramatic: 100px;
    --perspective-near: 300px;
    --perspective-normal: 500px;
    --perspective-midrange: 800px;
    --perspective-distant: 1200px;
    --aspect-video: 16 / 9;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --default-font-feature-settings: initial;
    --default-font-variation-settings: initial;
    --default-mono-font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --default-mono-font-feature-settings: initial;
    --default-mono-font-variation-settings: initial;
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    font-feature-settings: initial;
    font-variation-settings: initial;
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    font-feature-settings: initial;
    font-variation-settings: initial;
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: color-mix(in oklab, currentcolor 50%, transparent);
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .absolute {
    position: absolute;
  }
  .fixed {
    position: fixed;
  }
  .static {
    position: static;
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .left-1\/2 {
    left: calc(1/2 * 100%);
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-2 {
    margin-block: calc(var(--spacing) * 2);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-3 {
    margin-top: calc(var(--spacing) * 3);
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .ml-4 {
    margin-left: calc(var(--spacing) * 4);
  }
  .block {
    display: block;
  }
  .flex {
    display: flex;
  }
  .hidden {
    display: none;
  }
  .inline-block {
    display: inline-block;
  }
  .h-\[20px\] {
    height: 20px;
  }
  .h-\[22px\] {
    height: 22px;
  }
  .h-\[32px\] {
    height: 32px;
  }
  .h-full {
    height: 100%;
  }
  .max-h-\[400px\] {
    max-height: 400px;
  }
  .w-0 {
    width: calc(var(--spacing) * 0);
  }
  .w-9\/12 {
    width: calc(9/12 * 100%);
  }
  .w-11\/12 {
    width: calc(11/12 * 100%);
  }
  .w-\[80\%\] {
    width: 80%;
  }
  .w-\[95px\] {
    width: 95px;
  }
  .w-\[250px\] {
    width: 250px;
  }
  .w-full {
    width: 100%;
  }
  .max-w-xs {
    max-width: var(--container-xs);
  }
  .flex-grow {
    flex-grow: 1;
  }
  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .transform {
    transform: var(--tw-rotate-x) var(--tw-rotate-y) var(--tw-rotate-z) var(--tw-skew-x) var(--tw-skew-y);
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .resize {
    resize: both;
  }
  .flex-col {
    flex-direction: column;
  }
  .items-center {
    align-items: center;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-end {
    justify-content: flex-end;
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .justify-self-center {
    justify-self: center;
  }
  .overflow-y-auto {
    overflow-y: auto;
  }
  .rounded-sm {
    border-radius: var(--radius-sm);
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .p-1 {
    padding: calc(var(--spacing) * 1);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .text-center {
    text-align: center;
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .text-\[11px\] {
    font-size: 11px;
  }
  .leading-\[1\.2\] {
    --tw-leading: 1.2;
    line-height: 1.2;
  }
  .leading-none {
    --tw-leading: 1;
    line-height: 1;
  }
  .font-\[600\] {
    --tw-font-weight: 600;
    font-weight: 600;
  }
  .font-black {
    --tw-font-weight: var(--font-weight-black);
    font-weight: var(--font-weight-black);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-thin {
    --tw-font-weight: var(--font-weight-thin);
    font-weight: var(--font-weight-thin);
  }
  .uppercase {
    text-transform: uppercase;
  }
  .underline {
    text-decoration-line: underline;
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-\[150ms\] {
    --tw-duration: 150ms;
    transition-duration: 150ms;
  }
  .sm\:max-w-md {
    @media (width >= 40rem) {
      max-width: var(--container-md);
    }
  }
  .md\:max-w-lg {
    @media (width >= 48rem) {
      max-width: var(--container-lg);
    }
  }
}
@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}
@keyframes ping {
  75%, 100% {
    transform: scale(2);
    opacity: 0;
  }
}
@keyframes pulse {
  50% {
    opacity: 0.5;
  }
}
@keyframes bounce {
  0%, 100% {
    transform: translateY(-25%);
    animation-timing-function: cubic-bezier(0.8, 0, 1, 1);
  }
  50% {
    transform: none;
    animation-timing-function: cubic-bezier(0, 0, 0.2, 1);
  }
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
  initial-value: rotateX(0);
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
  initial-value: rotateY(0);
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
  initial-value: rotateZ(0);
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
  initial-value: skewX(0);
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
  initial-value: skewY(0);
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
