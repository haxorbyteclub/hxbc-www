@inject IJSRuntime _js
@inject GuestBookService _guestBookService
@inherits AppBase



<div class="window app-component draggable" id="@AppId">
	<div class="title-bar">
		<button aria-label="Close" class="close" @onclick="Remove"></button>
		<h1 class="title">Guestbook</h1>
		<button aria-label="Resize" disabled class="hidden"></button>
	</div>
	<div class="separator"></div>
	<div class=" text-sm window-pane">
		<div class="max-h-[400px] overflow-y-auto">
			@if (_messages is not null)
			{
				@foreach (var message in _messages.OrderByDescending(m => m.Date))
				{
					<div class="standard-dialog center scale-down text-xs w-11/12 mx-auto my-2">
						<h1 class="dialog-text uppercase"><span class="font-black">@message.User</span> -
							@message.Date.ToShortDateString()</h1>
						<p class="dialog-text">@message.Text</p>
					</div>
				}
			}
			else
			{
				<p>Loading...</p>
			}
		</div>
	</div>
</div>
@code {
    List<Message>? _messages;
    protected override void OnInitialized()
    {
        _guestBookService.MessagesChanged += OnMessagesChanged;
    }

    private async void OnMessagesChanged(object sender, NotifyCollectionChangedEventArgs e)
    {
        _messages = await _guestBookService.GetMessages();
        InvokeAsync(StateHasChanged);
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        base.OnAfterRenderAsync(firstRender);
        if (firstRender)
		{
		    _messages = await _guestBookService.GetMessages(true);
		    await InvokeAsync(StateHasChanged);
		}
	}
}