@inject IJSRuntime _js
@inject HttpClient _httpClient
@using System.Xml
@using System.Xml.Linq
@using System.Text.RegularExpressions
@inherits AppBase

<div class="window app-component draggable" id="@AppId">
	<div class="title-bar">
		<button aria-label="Close" class="close" @onclick="Remove">✕</button>
		<h1 class="title">News</h1>
		<button aria-label="Resize" disabled class="hidden"></button>
	</div>
	<div class="separator"></div>

	<div class="text-sm window-pane">
		<div class="max-h-[400px] overflow-y-auto">
			<img class="header-image mx-auto rounded-sm mt-2" src="img/hn-reader-header.jpg" alt="Welcome" />
			<div class="flex items-center justify-end mb-2 gap-1 font-typecast mr-2">
				<p class="text-center text-lg">powered by <a href="https://news.ycombinator.com" target="_blank">Hacker
						News<img class="mx-auto h-[20px] inline-block ml-2" src="img/hn.png"
							alt="Hacker News Logo" /></a></p>
			</div>
			@if (articles != null)
			{
				@foreach (var article in articles)
				{
					<div class="standard-dialog center scale-down text-xs w-11/12 mx-auto my-2">
						<p class="text-base mb-2 leading-none"><span>@article.Title</span></p>
						<a class="font-thin font-typecast text-xl" href="@article.Link" target="_blank">Read More</a>
						<a class="font-thin ml-4 font-typecast text-xl" href="@article.HNLink" target="_blank">View
							on
							HN</a>
					</div>
				}
			}
			else
			{
				<p>Loading...</p>
			}
		</div>
	</div>
</div>

@code {
	private List<Article> articles;

	protected override async Task OnInitializedAsync()
	{
		articles = await FetchHackerNewsRss();
	}

	private async Task<List<Article>> FetchHackerNewsRss()
	{
		var rssFeed = await _httpClient.GetStringAsync(Constants.BaseUrl + Constants.HNEndpoint);
		var doc = XDocument.Parse(rssFeed);
		var items = doc.Descendants("item")
		.Select(item => new Article
		{
			Title = item.Element("title")?.Value,
			Link = item.Element("link")?.Value,
			HNLink = item.Element("comments")?.Value
		})
		.ToList();
		return items;
	}




	private class Article
	{
		public string Title { get; set; }
		public string Link { get; set; }
		public string HNLink { get; set; }
	}
}